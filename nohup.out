Parsed 2604 rows from data/sim_train_spectrum_Au.
Parsed 2604 rows from data/sim_train_labels_Au.
Parsed 9765 rows from data/gen_spectrum_Au_00-of-16.
Parsed 9765 rows from data/gen_labels_Au_00-of-16.
Parsed 9765 rows from data/gen_spectrum_Au_01-of-16.
Parsed 9765 rows from data/gen_labels_Au_01-of-16.
Parsed 9765 rows from data/gen_spectrum_Au_02-of-16.
Parsed 9765 rows from data/gen_labels_Au_02-of-16.
Parsed 9765 rows from data/gen_spectrum_Au_03-of-16.
Parsed 9765 rows from data/gen_labels_Au_03-of-16.
Parsed 9765 rows from data/gen_spectrum_Au_04-of-16.
Parsed 9765 rows from data/gen_labels_Au_04-of-16.
Parsed 9765 rows from data/gen_spectrum_Au_05-of-16.
Parsed 9765 rows from data/gen_labels_Au_05-of-16.
Parsed 9765 rows from data/gen_spectrum_Au_06-of-16.
Parsed 9765 rows from data/gen_labels_Au_06-of-16.
Parsed 9765 rows from data/gen_spectrum_Au_07-of-16.
Parsed 9765 rows from data/gen_labels_Au_07-of-16.
Parsed 9765 rows from data/gen_spectrum_Au_08-of-16.
Parsed 9765 rows from data/gen_labels_Au_08-of-16.
Parsed 9765 rows from data/gen_spectrum_Au_09-of-16.
Parsed 9765 rows from data/gen_labels_Au_09-of-16.
Parsed 9765 rows from data/gen_spectrum_Au_10-of-16.
Parsed 9765 rows from data/gen_labels_Au_10-of-16.
Parsed 9765 rows from data/gen_spectrum_Au_11-of-16.
Parsed 9765 rows from data/gen_labels_Au_11-of-16.
Parsed 9765 rows from data/gen_spectrum_Au_12-of-16.
Parsed 9765 rows from data/gen_labels_Au_12-of-16.
Parsed 9765 rows from data/gen_spectrum_Au_13-of-16.
Parsed 9765 rows from data/gen_labels_Au_13-of-16.
Parsed 9765 rows from data/gen_spectrum_Au_14-of-16.
Parsed 9765 rows from data/gen_labels_Au_14-of-16.
Parsed 9765 rows from data/gen_spectrum_Au_15-of-16.
Parsed 9765 rows from data/gen_labels_Au_15-of-16.
Parsed 1302 rows from data/sim_validation_spectrum_Au.
Parsed 1302 rows from data/sim_validation_labels_Au.
Logging training progress to tensorboard dir runs/resnet18-Au-SGD-lr_0.001000-trainsize_158844-05_03_2020_20:22.
[epoch 0, batch    99] avg loss: 1.121898
[epoch 0, batch   199] avg loss: 0.935022
[epoch 0, batch   299] avg loss: 0.890881
[epoch 0, batch   399] avg loss: 0.854331
[epoch 0, batch   499] avg loss: 0.841854
[epoch 0, batch   599] avg loss: 0.822922
[epoch 0, batch   699] avg loss: 0.832592
[epoch 0, batch   799] avg loss: 0.807689
[epoch 0, batch   899] avg loss: 0.791629
[epoch 0, batch   999] avg loss: 0.777010
[epoch 0, batch  1099] avg loss: 0.779962
[epoch 0, batch  1199] avg loss: 0.759631
[epoch 0, batch  1299] avg loss: 0.747309
[epoch 0, batch  1399] avg loss: 0.736938
[epoch 0, batch  1499] avg loss: 0.754816
[epoch 0, batch  1599] avg loss: 0.750345
[epoch 0, batch  1699] avg loss: 0.736965
[epoch 0, batch  1799] avg loss: 0.737522
[epoch 0, batch  1899] avg loss: 0.720546
[epoch 0, batch  1999] avg loss: 0.738265
[epoch 0, batch  2099] avg loss: 0.715831
[epoch 0, batch  2199] avg loss: 0.702136
[epoch 0, batch  2299] avg loss: 0.687097
[epoch 0, batch  2399] avg loss: 0.696088
Traceback (most recent call last):
  File "src/train_inv_model.py", line 263, in <module>
    main()
  File "src/train_inv_model.py", line 258, in main
    loss_weights=[1., 0., 0.], global_step=global_step)
  File "src/train_inv_model.py", line 96, in train
    metrics = compute_metrics(model, validation_set)
  File "src/train_inv_model.py", line 124, in compute_metrics
    outputs = model(inputs)[:, :N_GEOM_CLASSES]
  File "/home/ec2-user/anaconda3/envs/nano/lib/python3.6/site-packages/torch/nn/modules/module.py", line 532, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/ec2-user/nanoparticle/src/resnet.py", line 195, in forward
    return self._forward_impl(x)
  File "/home/ec2-user/nanoparticle/src/resnet.py", line 178, in _forward_impl
    x = self.conv1(x)
  File "/home/ec2-user/anaconda3/envs/nano/lib/python3.6/site-packages/torch/nn/modules/module.py", line 532, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/ec2-user/anaconda3/envs/nano/lib/python3.6/site-packages/torch/nn/modules/conv.py", line 202, in forward
    self.padding, self.dilation, self.groups)
RuntimeError: Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same
